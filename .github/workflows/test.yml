name: Tests

on:
  push: { branches: [ master ] }
  pull_request: { branches: [ master ] }

env:
  CARGO_TERM_COLOR: always

jobs:
  stable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/toolchain@v1
      with: { toolchain: stable, override: true, components: rustfmt }
    - name: Run tests
      uses: actions-rs/cargo@v1
      with: { command: test }
    - name: Run tests for error messages
      uses: actions-rs/cargo@v1
      with: { command: test, args: error_message_tests -- --ignored }
    - name: Run fmt
      uses: actions-rs/cargo@v1
      with: { command: fmt, args: --check }

  nightly:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with: { toolchain: nightly, override: true }
    - name: Run tests
      uses: actions-rs/cargo@v1
      with: { command: test }
    - name: Run tests for error messages
      uses: actions-rs/cargo@v1
      with: { command: test, args: error_message_tests -- --ignored }
    - name: Run docs
      uses: actions-rs/cargo@v1
      with: { command: doc, args: --no-deps }

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with: { toolchain: nightly, override: true, components: clippy }
    - name: Run clippy in sscanf
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Run clippy in sscanf_macro
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --manifest-path sscanf_macro/Cargo.toml

  minimal-versions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/toolchain@v1
      with: { toolchain: stable }
    - uses: actions-rs/toolchain@v1
      with: { toolchain: nightly }
    - name: Update to minimal versions
      run: cargo +nightly update -Z minimal-versions
    - name: Run minimal version stable tests
      uses: actions-rs/cargo@v1
      with: { command: test, toolchain: stable }
    - name: Run minimal version nightly tests
      uses: actions-rs/cargo@v1
      with: { command: test, toolchain: nightly }

  minimum-rust-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: actions-rs/toolchain@v1
      with: { toolchain: 1.56.0 }
    - name: Run tests
      uses: actions-rs/cargo@v1
      with: { command: test, toolchain: 1.56.0 }
