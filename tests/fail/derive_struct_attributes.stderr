error: FromScanf: structs must have a format string as an attribute.
       Please add either of #[sscanf(format = "...")], #[sscanf(format_unescaped = "...")] or #[sscanf("...")]
 --> tests/fail/derive_struct_attributes.rs:2:8
  |
2 | struct TestNoAttributes;
  |        ^^^^^^^^^^^^^^^^

error: expected attribute arguments in parentheses: #[sscanf(...)]
 --> tests/fail/derive_struct_attributes.rs:5:1
  |
5 | #[sscanf]
  | ^^^^^^^^^

error: expected attribute to take a format string as an argument.
       Valid arguments: #[sscanf(format = "...")], #[sscanf(format_unescaped = "...")] or #[sscanf("...")]
 --> tests/fail/derive_struct_attributes.rs:9:1
  |
9 | #[sscanf()]
  | ^^^^^^^^^^^

error: unnecessary arguments to the attribute. structs only allow a single `format` argument, nothing else
  --> tests/fail/derive_struct_attributes.rs:13:21
   |
13 | #[sscanf(format = "", format_unescaped = "")]
   |                     ^^^^^^^^^^^^^^^^^^^^^^^

error: format attribute specified multiple times
  --> tests/fail/derive_struct_attributes.rs:17:10
   |
17 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: format attribute specified multiple times
  --> tests/fail/derive_struct_attributes.rs:18:10
   |
18 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: format attribute specified multiple times
  --> tests/fail/derive_struct_attributes.rs:22:10
   |
22 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: format attribute specified multiple times
  --> tests/fail/derive_struct_attributes.rs:23:10
   |
23 | #[sscanf(format_unescaped = "")]
   |          ^^^^^^^^^^^^^^^^^^^^^

error: unnecessary arguments to the attribute. structs only allow a single `format` argument, nothing else
  --> tests/fail/derive_struct_attributes.rs:27:21
   |
27 | #[sscanf(format = "", bob = "")]
   |                     ^^^^^^^^^^

error: unneeded and invalid sscanf attribute
  --> tests/fail/derive_struct_attributes.rs:32:1
   |
32 | #[sscanf(bob = "")]
   | ^^^^^^^^^^^^^^^^^^^

error: unnecessary arguments to the attribute. structs only allow a single `format` argument, nothing else
  --> tests/fail/derive_struct_attributes.rs:36:22
   |
36 | #[sscanf(format = "" bob = "")]
   |                      ^^^^^^^^

error: expected string literal
  --> tests/fail/derive_struct_attributes.rs:40:19
   |
40 | #[sscanf(format = 5)]
   |                   ^

error: expected `"..."` after `=`
  --> tests/fail/derive_struct_attributes.rs:44:17
   |
44 | #[sscanf(format =)]
   |                 ^

error: expected `=`
  --> tests/fail/derive_struct_attributes.rs:48:17
   |
48 | #[sscanf(format "")]
   |                 ^^

error: expected `= "..."` after `format`
  --> tests/fail/derive_struct_attributes.rs:52:10
   |
52 | #[sscanf(format)]
   |          ^^^^^^

error: expected a format string as either `format = "..."`, `format_unescaped = "..."`, or just `"..."`
  --> tests/fail/derive_struct_attributes.rs:56:10
   |
56 | #[sscanf(= "")]
   |          ^^^^

error: `default` arguments are only valid on fields
  --> tests/fail/derive_struct_attributes.rs:60:10
   |
60 | #[sscanf(default)]
   |          ^^^^^^^

error: `default` arguments are only valid on fields
  --> tests/fail/derive_struct_attributes.rs:64:10
   |
64 | #[sscanf(default = "")]
   |          ^^^^^^^

error: expected either `format` or `format_unescaped`, got `bob`
  --> tests/fail/derive_struct_attributes.rs:68:10
   |
68 | #[sscanf(bob)]
   |          ^^^

error: unknown attribute `formt`. Did you mean `format`?
  --> tests/fail/derive_struct_attributes.rs:72:10
   |
72 | #[sscanf(formt)]
   |          ^^^^^

error: unknown attribute `formad_unscabededd`. Did you mean `format_unescaped`?
  --> tests/fail/derive_struct_attributes.rs:76:10
   |
76 | #[sscanf(formad_unscabededd)]
   |          ^^^^^^^^^^^^^^^^^^

error: enums cannot have outer attributes
  --> tests/fail/derive_struct_attributes.rs:82:1
   |
82 | #[sscanf(format = "")]
   | ^^^^^^^^^^^^^^^^^^^^^^

error: at least one variant has to be constructable from sscanf.
       To do this, add #[sscanf(format = "...")] to a variant
  --> tests/fail/derive_struct_attributes.rs:86:6
   |
86 | enum TestEnumNoFormat { A, B }
   |      ^^^^^^^^^^^^^^^^
