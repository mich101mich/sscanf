error: FromScanf: structs must have a format string as an attribute.
       Please add either of #[sscanf(format = "...")], #[sscanf(format_unescaped = "...")] or #[sscanf("...")]
 --> tests/fail/derive_struct_attributes.rs:2:8
  |
2 | struct TestNoAttributes;
  |        ^^^^^^^^^^^^^^^^

error: expected attribute arguments in parentheses: `sscanf(...)`
 --> tests/fail/derive_struct_attributes.rs:5:3
  |
5 | #[sscanf]
  |   ^^^^^^

error: FromScanf: structs must have a format string as an attribute.
       Please add either of #[sscanf(format = "...")], #[sscanf(format_unescaped = "...")] or #[sscanf("...")]
  --> tests/fail/derive_struct_attributes.rs:10:8
   |
10 | struct TestEmptyAttribute2;
   |        ^^^^^^^^^^^^^^^^^^^

error: attribute arguments must be in parentheses: `sscanf("")`
  --> tests/fail/derive_struct_attributes.rs:13:3
   |
13 | #[sscanf = ""]
   |   ^^^^^^^^^^^

error: cannot specify both `format` and `format_unescaped`
  --> tests/fail/derive_struct_attributes.rs:17:10
   |
17 | #[sscanf(format = "", format_unescaped = "")]
   |          ^^^^^^^^^^^

error: cannot specify both `format` and `format_unescaped`
  --> tests/fail/derive_struct_attributes.rs:17:23
   |
17 | #[sscanf(format = "", format_unescaped = "")]
   |                       ^^^^^^^^^^^^^^^^^^^^^

error: only one of `format`, `format_unescaped`, or `transparent` is allowed
  --> tests/fail/derive_struct_attributes.rs:21:10
   |
21 | #[sscanf(format = "", format_unescaped = "", transparent)]
   |          ^^^^^^^^^^^

error: only one of `format`, `format_unescaped`, or `transparent` is allowed
  --> tests/fail/derive_struct_attributes.rs:21:23
   |
21 | #[sscanf(format = "", format_unescaped = "", transparent)]
   |                       ^^^^^^^^^^^^^^^^^^^^^

error: only one of `format`, `format_unescaped`, or `transparent` is allowed
  --> tests/fail/derive_struct_attributes.rs:21:46
   |
21 | #[sscanf(format = "", format_unescaped = "", transparent)]
   |                                              ^^^^^^^^^^^

error: attribute `format` is specified multiple times
  --> tests/fail/derive_struct_attributes.rs:26:10
   |
26 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: previous use here
  --> tests/fail/derive_struct_attributes.rs:25:10
   |
25 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: cannot specify both `format` and `format_unescaped`
  --> tests/fail/derive_struct_attributes.rs:30:10
   |
30 | #[sscanf(format = "")]
   |          ^^^^^^^^^^^

error: cannot specify both `format` and `format_unescaped`
  --> tests/fail/derive_struct_attributes.rs:31:10
   |
31 | #[sscanf(format_unescaped = "")]
   |          ^^^^^^^^^^^^^^^^^^^^^

error: unknown attribute `bob`. Valid attributes are: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:35:23
   |
35 | #[sscanf(format = "", bob = "")]
   |                       ^^^

error: unknown attribute `bob`. Valid attributes are: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:40:10
   |
40 | #[sscanf(bob = "")]
   |          ^^^

error: expected `,`
  --> tests/fail/derive_struct_attributes.rs:44:22
   |
44 | #[sscanf(format = "" bob = "")]
   |                      ^^^

error: expected string literal
  --> tests/fail/derive_struct_attributes.rs:48:19
   |
48 | #[sscanf(format = 5)]
   |                   ^

error: expected an expression after `=`
  --> tests/fail/derive_struct_attributes.rs:52:17
   |
52 | #[sscanf(format =)]
   |                 ^

error: expected `,` or `=`
  --> tests/fail/derive_struct_attributes.rs:56:17
   |
56 | #[sscanf(format "")]
   |                 ^^

error: attribute `format` has the format: `#[sscanf(format = "<format>")]`
       where `<format>` is a format string using the field names inside of its placeholders
  --> tests/fail/derive_struct_attributes.rs:60:10
   |
60 | #[sscanf(format)]
   |          ^^^^^^

error: expected identifier
  --> tests/fail/derive_struct_attributes.rs:64:10
   |
64 | #[sscanf(= "")]
   |          ^

error: attribute `default` can only be used on fields.
       structs can have the following attributes: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:68:10
   |
68 | #[sscanf(default)]
   |          ^^^^^^^

error: attribute `default` can only be used on fields.
       structs can have the following attributes: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:72:10
   |
72 | #[sscanf(default = "")]
   |          ^^^^^^^

error: unknown attribute `bob`. Valid attributes are: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:76:10
   |
76 | #[sscanf(bob)]
   |          ^^^

error: unknown attribute `formt`. Did you mean `format`?
  --> tests/fail/derive_struct_attributes.rs:80:10
   |
80 | #[sscanf(formt)]
   |          ^^^^^

error: unknown attribute `formad_unscabededd`. Did you mean `format_unescaped`?
  --> tests/fail/derive_struct_attributes.rs:84:10
   |
84 | #[sscanf(formad_unscabededd)]
   |          ^^^^^^^^^^^^^^^^^^

error: unknown attribute `defauld` is similar to `default`, which can only be used on fields.
       structs can have the following attributes: `format`, `format_unescaped`, or `transparent`
  --> tests/fail/derive_struct_attributes.rs:88:10
   |
88 | #[sscanf(defauld)]
   |          ^^^^^^^

error: structs or variants marked as `transparent` must have exactly one field
  --> tests/fail/derive_struct_attributes.rs:92:10
   |
92 | #[sscanf(transparent)]
   |          ^^^^^^^^^^^

error: structs or variants marked as `transparent` must have exactly one field
  --> tests/fail/derive_struct_attributes.rs:96:10
   |
96 | #[sscanf(transparent)]
   |          ^^^^^^^^^^^

error: expected `,` or `=`
   --> tests/fail/derive_struct_attributes.rs:100:21
    |
100 | #[sscanf(transparent(5))]
    |                     ^

error: attribute `transparent` does not take a value
   --> tests/fail/derive_struct_attributes.rs:104:24
    |
104 | #[sscanf(transparent = "true")]
    |                        ^^^^^^
